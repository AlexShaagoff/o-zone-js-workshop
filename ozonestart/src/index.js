// —á–µ–∫–±–æ–∫—Å
function toggleCheckbox() {
    const navPanelCheckboxes = document.querySelectorAll(".filter-check_checkbox");

    navPanelCheckboxes.forEach(function (checkbox) {
        checkbox.addEventListener("change", function () {
            if (this.checked) {
                this.nextElementSibling.classList.add("checked");
            } else {
                this.nextElementSibling.classList.remove("checked");
            }
        });
    });
}
// end —á–µ–∫–±–æ–∫—Å

// –∫–æ—Ä–∑–∏–Ω–∞
function toggleCart() {
    const openCartBtn = document.getElementById("open-cart-button");
    const modalCartWindow = document.getElementById("order-cart");
    const closeCartBtn = document.getElementById("cart-close-btn");

    openCartBtn.addEventListener("click", () => {
        modalCartWindow.style.display = "flex";
        document.body.style.overflow = "hidden";
    });

    closeCartBtn.addEventListener("click", () => {
        modalCartWindow.style.display = "none";
        document.body.style.overflow = "auto";
    });
}
// end –∫–æ—Ä–∑–∏–Ω–∞

// —Ä–∞–±–æ—Ç–∞ —Å –∫–æ—Ä–∑–∏–Ω–æ–π
function addCart() {
    const cards = document.querySelectorAll("#goods .card"),
        cartWrapper = document.querySelector(".cart-wrapper"),
        cartEmpty = document.getElementById("cart-empty"),
        goodsCounter = document.querySelector("#open-cart-button > .counter");

    cards.forEach((card) => {
        const btn = card.querySelector(".add-to-cart-button");
        btn.addEventListener("click", () => {
            const cardClone = card.cloneNode(true);
            cartWrapper.appendChild(cardClone);

            updateGoodsCounter();

            const removeBtn = cardClone.querySelector(".btn");
            removeBtn.textContent = "–£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã";
            removeBtn.addEventListener("click", () => {
                cardClone.remove();
                updateGoodsCounter();
            });
        });
    });

    function updateGoodsCounter() {
        const cartCards = cartWrapper.querySelectorAll(".card"),
            cardsPrice = cartWrapper.querySelectorAll(".card-price"),
            cartTotal = document.querySelector(".cart-total > span");

        goodsCounter.textContent = cartCards.length;

        let sum = 0;
        cardsPrice.forEach(cardPrice => {
            sum += parseFloat(cardPrice.textContent);
        });
        cartTotal.textContent = sum;

        if (cartCards.length !== 0) {
            cartEmpty.style.display = "none";
        } else {
            cartEmpty.style.display = "block";
        }
    }
}
// end —Ä–∞–±–æ—Ç–∞ —Å –∫–æ—Ä–∑–∏–Ω–æ–π

// —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
function addFiltering() {
    const discountCheckbox = document.getElementById("discount-checkbox"),
        min = document.getElementById("min"),
        max = document.getElementById("max"),
        search = document.querySelector(".search-wrapper_input"),
        searchBtn = document.querySelector(".search-btn");

    // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –∞–∫—Ü–∏–∏
    discountCheckbox.addEventListener("click", filterCards);

    // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ —Ü–µ–Ω–µ
    min.addEventListener("change", filterCards);
    max.addEventListener("change", filterCards);

    // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é (–ø–æ–∏—Å–∫–∞)
    searchBtn.addEventListener("click", filterCards);
    search.addEventListener("keyup", event => {
        event.preventDefault();
        if (event.keyCode === 13) { // Enter
            filterCards();
        }
    });
}

// —Ñ–∏–ª—å—Ç—Ä —Å —É—á—ë—Ç–æ–º –∞–∫—Ü–∏–∏, —Ü–µ–Ω—ã –∏ –Ω–∞–∑–≤–∞–Ω–∏—è
function filterCards() {
    const cards = document.querySelectorAll("#goods .card"),
        discountCheckbox = document.getElementById("discount-checkbox"),
        min = document.getElementById("min"),
        max = document.getElementById("max"),
        search = document.querySelector(".search-wrapper_input");
    const categoryText = sessionStorage.getItem("Category");

    // –ø—Ä–µ–¥–∏–∫–∞—Ç —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –∞–∫—Ü–∏–∏
    function filterByDiscount(card) {
        return !discountCheckbox.checked || card.querySelector(".card-sale");
    }

    // –ø—Ä–µ–¥–∏–∫–∞—Ç —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ —Ü–µ–Ω–µ
    function filterByPrice(card) {
        const cardPrice = card.querySelector(".card-price"),
        price = parseFloat(cardPrice.textContent);
        
        // —É—Å–ª–æ–≤–∏–µ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø—É—Å—Ç—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        return (!min.value || min.value <= price) &&
               (!max.value || price <= max.value);
    }
    
    // –ø—Ä–µ–¥–∏–∫–∞—Ç —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é (–ø–æ–∏—Å–∫–∞)
    function filterByTitle(card) {
        const title = card.querySelector(".card-title");
        return searchText.test(title.textContent);
    }

    function filterByCategory(card) {
        return categoryText === "Default" || card.dataset.category === categoryText;
    }

    // —Å–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
    cards.forEach(card => {
        card.parentNode.style.display = "none";
    });

    // –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥—Ö–æ–¥—è—Ç –ø–æ —É—Å–ª–æ–≤–∏—è–º –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
    const searchText = new RegExp(search.value.trim(), "i");

    const cardsArray = Array.from(cards);
    const filteredCards = cardsArray
        .filter(filterByDiscount)
        .filter(filterByPrice)
        .filter(filterByTitle)
        .filter(filterByCategory);

    // –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–∞–∫–∏–µ —Ç–æ–≤–∞—Ä—ã
    filteredCards.forEach(card => {
        card.parentNode.style.display = "block";
    });
}
// end —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è

// –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
function getData() {
    const goodsWrapper = document.querySelector("#goods");
    return fetch("./db/db.json")
        .then(response => {
            if (response.ok) {
                return response.json();
            } else {
                throw new Error(`–î–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã, –æ—à–∏–±–∫–∞: ${response.status}`);
            }
        })
        .catch(err => {
            console.warn(err);
            goodsWrapper.innerHTML = "<div style='color:red; font-size:30px'>–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫</div>";
        });
}

//–≤—ã–≤–æ–¥ –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–∞
function renderCards(data) {
    const goodsWrapper = document.querySelector("#goods");
    data.goods.forEach(good => {
        const card = document.createElement("div");
        card.className = "col-12 col-md-6 col-lg-4 col-xl-3";
        card.innerHTML = `
            <div class="card" data-category="${good.category}">
                ${good.sale ? '<div class="card-sale">üî•Hot Saleüî•</div>' : ''}
                <div class="card-img-wrapper">
                    <span class="card-img-top"
                        style="background-image: url('${good.img}')"></span>
                </div>
                <div class="card-body justify-content-between">
                    <div class="card-price" style="${good.sale ? 'color:purple' : ''}">${good.price} ‚ÇΩ</div>
                    <h5 class="card-title">${good.title}</h5>
                    <button class="btn btn-primary add-to-cart-button">–í –∫–æ—Ä–∑–∏–Ω—É</button>
                </div>
            </div>
        `;

        goodsWrapper.appendChild(card);
    });
}
// end –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞

// —Ä–∞–±–æ—Ç–∞ —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º
function renderCatalog() {
    const cards = document.querySelectorAll("#goods .card"),
        catalogList = document.getElementById("catalog-list"),
        catalogWrapper = document.getElementById("catalog-wrapper"),
        catalogBtn = document.getElementById("catalog-button");

    const categories = new Set();
    cards.forEach(card => {
        categories.add(card.dataset.category);
    });

    categories.forEach(category => {
        const catalogItem = document.createElement("li");
        catalogItem.textContent = category;
        catalogList.appendChild(catalogItem);
    });

    catalogBtn.addEventListener("click", event => {
        if (catalogWrapper.style.display) {
            catalogWrapper.style.display = "";
        } else {
            catalogWrapper.style.display = "block";
        }

        if (event.target.tagName === "LI") {
            sessionStorage.setItem("Category", event.target.textContent);
            filterCards();
        }
    });

    sessionStorage.setItem("Category", "Default");
}
// end —Ä–∞–±–æ—Ç–∞ —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º

getData().then(data => {
    renderCards(data);
    toggleCheckbox();
    toggleCart();
    addCart();
    addFiltering();
    renderCatalog();
});

